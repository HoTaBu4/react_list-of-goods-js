{"version":3,"sources":["components/GoodsList.jsx","App.jsx","index.jsx"],"names":["GoodsList","list","map","good","goodsFromServer","SORT_FIELD_LENGTH","SORT_FIELD_ALPHABETICALLY","getPrepared","goods","sortField","isReversed","preparedGoods","sort","good1","good2","length","localeCompare","reverse","App","useState","setSortField","SetIsReversed","visibleGoods","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"iOAAaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvB,6BACGA,EAAKC,KAAI,SAAAC,GAAI,OACZ,oBACE,UAAQ,OADV,SAIGA,GAFIA,SCAAC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAoB,SACpBC,EAA4B,WAElC,SAASC,EAAYC,EAAOC,EAAWC,GACrC,IAAIC,EAAa,YAAOH,GAExB,GAAIC,EACF,OAAQA,GACN,KAAKJ,EACHM,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBA,EAAMC,OAASF,EAAME,UAC1D,MACF,KAAKT,EACHK,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,cAAcF,MAW/D,OAJIJ,IACFC,EAAgBA,EAAcM,WAGzBN,EAGF,IAAMO,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOV,EAAP,KAAkBW,EAAlB,KACA,EAAoCD,oBAAS,GAA7C,mBAAOT,EAAP,KAAmBW,EAAnB,KAEMC,EAAef,EAAYH,EAAiBK,EAAWC,GAE7D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBd,IAAcH,EAA4B,GAAK,YAC5EmB,QAAS,WACPL,EAAad,IAJjB,iCAUA,wBACEkB,KAAK,SACLD,UAAS,4BAAuBd,IAAcJ,EAAoB,GAAK,YACvEoB,QAAS,WACPL,EAAaf,IAJjB,4BAUA,wBACEmB,KAAK,SACLD,UAAS,4BAAuBb,EAAa,GAAK,YAClDe,QAAS,WACPJ,GAAeX,GACfH,EAAYH,EAAiBK,EAAWC,IAL5C,qBAWA,wBACEc,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPL,EAAa,KAJjB,sBAUF,cAAC,EAAD,CAAWnB,KAAMqB,QC3FvBI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cdeb7957.chunk.js","sourcesContent":["export const GoodsList = ({ list }) => (\n  <ul>\n    {list.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_LENGTH = 'length';\nconst SORT_FIELD_ALPHABETICALLY = 'alphabet';\n\nfunction getPrepared(goods, sortField, isReversed) {\n  let preparedGoods = [...goods];\n\n  if (sortField) {\n    switch (sortField) {\n      case SORT_FIELD_LENGTH:\n        preparedGoods.sort((good1, good2) => good2.length - good1.length);\n        break;\n      case SORT_FIELD_ALPHABETICALLY:\n        preparedGoods.sort((good1, good2) => good1.localeCompare(good2));\n        break;\n      default:\n        break;\n    }\n  }\n\n  if (isReversed) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, SetIsReversed] = useState(false);\n\n  const visibleGoods = getPrepared(goodsFromServer, sortField, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortField === SORT_FIELD_ALPHABETICALLY ? '' : 'is-light'}`}\n          onClick={() => {\n            setSortField(SORT_FIELD_ALPHABETICALLY);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortField === SORT_FIELD_LENGTH ? '' : 'is-light'}`}\n          onClick={() => {\n            setSortField(SORT_FIELD_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n          onClick={() => {\n            SetIsReversed(!isReversed);\n            getPrepared(goodsFromServer, sortField, isReversed);\n          }}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={() => {\n            setSortField('');\n          }}\n        >\n          Reset\n        </button>\n      </div>\n      <GoodsList list={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}