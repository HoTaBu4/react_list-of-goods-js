{"version":3,"sources":["components/GoodsList.jsx","App.jsx","index.jsx"],"names":["GoodsList","list","map","good","goodsFromServer","SORT_FIELD_LENGTH","SORT_FIELD_ALPHABETICALLY","SORT_FIELD_REVERSE","App","useState","sortField","setSortField","visibleGoods","goods","preparedGoods","reverse","sort","good1","good2","length","localeCompare","getPrepared","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"yNAAaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvB,6BACGA,EAAKC,KAAI,SAAAC,GAAI,OACZ,oBACE,UAAQ,OADV,SAIGA,GAFIA,SCAAC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAoB,SACpBC,EAA4B,WAC5BC,EAAqB,UAyBpB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAGMC,EA3BR,SAAqBC,EAAOH,GAC1B,IAAII,EAAa,UAAOV,GAmBxB,OAjBIM,IACEA,IAAcH,IAChBO,EAAgBA,EAAcC,WAGhCD,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKL,EACH,OAAOa,EAAMC,OAASF,EAAME,OAC9B,KAAKb,EACH,OAAOW,EAAMG,cAAcF,GAC7B,QACE,OAAOD,OAKRH,EAOcO,CAAYjB,EAAiBM,GAElD,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBZ,IAAcJ,EAA4B,GAAK,YAC5EkB,QAAS,WACPb,EAAaL,IAJjB,iCAUA,wBACEiB,KAAK,SACLD,UAAS,4BAAuBZ,IAAcL,EAAoB,GAAK,YACvEmB,QAAS,WACPb,EAAaN,IAJjB,4BAUA,wBACEkB,KAAK,SACLD,UAAS,4BAAuBZ,IAAcH,EAAqB,GAAK,YACxEiB,QAAS,WACPb,EAAaJ,IAJjB,qBAUA,wBACEgB,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPb,EAAa,KAJjB,sBAUF,cAAC,EAAD,CAAWV,KAAMW,QC3FvBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.363ec257.chunk.js","sourcesContent":["export const GoodsList = ({ list }) => (\n  <ul>\n    {list.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_LENGTH = 'length';\nconst SORT_FIELD_ALPHABETICALLY = 'alphabet';\nconst SORT_FIELD_REVERSE = 'reverse';\n\nfunction getPrepared(goods, sortField) {\n  let preparedGoods = [...goodsFromServer];\n\n  if (sortField) {\n    if (sortField === SORT_FIELD_REVERSE) {\n      preparedGoods = preparedGoods.reverse();\n    }\n\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_LENGTH:\n          return good2.length - good1.length;\n        case SORT_FIELD_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n        default:\n          return good1;\n      }\n    });\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  // const [currentList, setCurrentList] = useState(goodsFromServer);\n\n  const visibleGoods = getPrepared(goodsFromServer, sortField);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortField === SORT_FIELD_ALPHABETICALLY ? '' : 'is-light'}`}\n          onClick={() => {\n            setSortField(SORT_FIELD_ALPHABETICALLY);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortField === SORT_FIELD_LENGTH ? '' : 'is-light'}`}\n          onClick={() => {\n            setSortField(SORT_FIELD_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${sortField === SORT_FIELD_REVERSE ? '' : 'is-light'}`}\n          onClick={() => {\n            setSortField(SORT_FIELD_REVERSE);\n          }}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={() => {\n            setSortField('');\n          }}\n        >\n          Reset\n        </button>\n      </div>\n      <GoodsList list={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}